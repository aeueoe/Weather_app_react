{"ast":null,"code":"var _jsxFileName = \"D:\\\\She codes\\\\SCplus\\\\weather_app_react\\\\src\\\\FormatDate.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormatDate(props) {\n  let daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let dayOfWeek = daysOfWeek[props.date.getDay()];\n  let month = months[props.date.getMonth()];\n  let dayOfMonth = props.date.getDate();\n  let hours = props.date.getHours();\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [dayOfWeek, \", \", month, \" \", dayOfMonth, \" | \", hours, \":\", minutes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = FormatDate;\nvar _c;\n$RefreshReg$(_c, \"FormatDate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormatDate","props","daysOfWeek","months","dayOfWeek","date","getDay","month","getMonth","dayOfMonth","getDate","hours","getHours","minutes","getMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/She codes/SCplus/weather_app_react/src/FormatDate.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function FormatDate(props) {\r\n  let daysOfWeek = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  let dayOfWeek = daysOfWeek[props.date.getDay()];\r\n  let month = months[props.date.getMonth()];\r\n  let dayOfMonth = props.date.getDate();\r\n  let hours = props.date.getHours();\r\n  let minutes = props.date.getMinutes();\r\n\r\n  if (minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {dayOfWeek}, {month} {dayOfMonth} | {hours}:{minutes}\r\n    </span>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EACxC,IAAIC,UAAU,GAAG,CACf,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,CACX;EAED,IAAIC,MAAM,GAAG,CACX,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;EAED,IAAIC,SAAS,GAAGF,UAAU,CAACD,KAAK,CAACI,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC/C,IAAIC,KAAK,GAAGJ,MAAM,CAACF,KAAK,CAACI,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC;EACzC,IAAIC,UAAU,GAAGR,KAAK,CAACI,IAAI,CAACK,OAAO,CAAC,CAAC;EACrC,IAAIC,KAAK,GAAGV,KAAK,CAACI,IAAI,CAACO,QAAQ,CAAC,CAAC;EACjC,IAAIC,OAAO,GAAGZ,KAAK,CAACI,IAAI,CAACS,UAAU,CAAC,CAAC;EAErC,IAAID,OAAO,GAAG,EAAE,EAAE;IAChBA,OAAO,GAAI,IAAGA,OAAQ,EAAC;EACzB;EAEA,oBACEd,OAAA;IAAAgB,QAAA,GACGX,SAAS,EAAC,IAAE,EAACG,KAAK,EAAC,GAAC,EAACE,UAAU,EAAC,KAAG,EAACE,KAAK,EAAC,GAAC,EAACE,OAAO;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEX;AAACC,EAAA,GAzCuBpB,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}